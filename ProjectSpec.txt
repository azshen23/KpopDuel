ðŸŽ¯ Goal

    Build a real-time 1v1 K-pop audio snippet battle game. Players guess song titles as fast as possible. Points based on speed and accuracy. Uses WebSockets for low-latency play.

ðŸŸ¢ Frontend (Client Repo)
ðŸ’» Tech stack

    Expo (React Native)

    TypeScript

    NativeWind 

    Socket.io client

    Firebase Storage (for audio snippet URLs)

    Expo expo-av for playback

ðŸ’¬ Features
âœ… Login

    Google Sign-In (Expo Auth or Firebase Auth).

    Store display name & photo URL locally.

âœ… Lobby / Matchmaking

    Tap "Find Opponent" â†’ client emits findOpponent.

    Show "Waiting for opponent..." state.

âœ… Game flow

    5 rounds total.

    Each round:

        Play 5-sec audio snippet (URL from server).

        4 song options.

        User guesses â†’ emit playerGuess event to server.

        Show correct answer, updated scores.

âœ… End screen

    Final score summary.

    Show winner.

    "Play again" or "Exit."

ðŸ’¥ Socket events from client

    findOpponent

    playerGuess (round, guess)

âœ… Frontend screens

    LoginScreen

    LobbyScreen

    GameScreen

    ResultsScreen

ðŸ”´ Backend (Server Repo)
ðŸ’» Tech stack

    Node.js

    Express

    Socket.io

    TypeScript (recommended)

    In-memory state (no DB for MVP)

ðŸ’¬ Server features
âœ… Matchmaking

    Manage queue of players waiting for matches.

    Create match room when 2 players ready.

âœ… Game logic

    5 rounds per match.

    Server emits:

        startGame (opponent info)

        startRound (snippet URL, options)

        roundResult (correct answer, scores)

        gameOver (final scores, winner)

    Validate guesses and track scores in memory.

âœ… Types

type Match = {
  id: string;
  player1Id: string;
  player2Id: string;
  currentRound: number;
  rounds: Array<{
    snippetURL: string;
    options: string[];
    correctAnswer: string;
  }>;
  scores: { [playerId: string]: number };
  state: 'waiting' | 'playing' | 'finished';
};

ðŸ’¥ Server socket events
From client â†’ server

    findOpponent

    playerGuess (payload: round number, guess)

From server â†’ client

    startGame

    startRound

    roundResult

    gameOver

ðŸ’¥ Deployment & Repos
âœ… Separate repos
Frontend repo

kpopduel-client/
  App.tsx
  screens/
  utils/
  assets/
  socket.ts

Backend repo

kpopduel-server/
  server.ts
  gameManager.ts
  types.ts

